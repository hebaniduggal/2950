{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Hebani Duggal \n",
    "hd288 \n",
    "Problem Set 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 216,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Conservative Case Against Betsy DeVos\n",
      "Her nomination as education secretary has united liberals, rural Republicans, and Breitbart writers in disdain.\n",
      "Feb. 7 2017 11:43 AM\n",
      "Of all of Donald J. Trump's controversial Cabinet choices, Betsy DeVos, his nominee for secretary of education, will likely come closest to falling short of Senate confirmation. But after a bumpy hearing last month, declarations by two Republicans that they can't in good conscience vote her through, and a probably futile Democratic \"talk-a-thon\" that kicked off Monday on the floor of the Senate, it seems DeVos will only secure her spot by dint of the intervention of Vice President Mike Pence, who will be called on to cast a tie-breaking vote. (Update, Feb. 7, 12:32 p.m.: And that's exactly what he did, allowing the Senate to confirm DeVos, 51-50.)\n",
      "What distinguishes the resistance to DeVos from the groundswell of opposition to the administration's other nominees is that it's not just liberals who are unhappy. Rather, in addition to the expected progressive outrage over DeVos' history of advocating for school vouchers; championing charterization; and, at her hearing, defending having guns in schools (yes, the thing about grizzly bears), there are important conservatives resisting too. On both the now-powerful Breitbart flank of the movement and among moderates, Republicans have come out against President Trump's choice -- more than you would expect given the 50 GOP senators who appear likely to vote for her. All of this says something about the Republican Party, where some members are bucking the president just three weeks into his term, and about the debates over reforming education that will take place over the next four years: In 2017, there's no conservative unity on education policy.\n",
      "To understand all this, it's important to note the 1990s charter school movement that seemed to sweep the country didn't quite reach all states. Rather, a handful -- mostly in the Great Plains and Appalachia -- held out. Those states -- Montana, North and South Dakota, Nebraska, Kentucky, West Virginia, and Vermont -- have one thing in common: Compared with the rest of America, they have many fewer people in cities. That feature is not coincidentally shared by Maine and Alaska, the states represented by Susan Collins and Lisa Murkowski, the Republican senators who will definitely vote against DeVos. And, not coincidentally either, in both senators' states, the charter school movement was slow to take seed: In Maine, there are seven charters in operation, and in Alaska, 29. Here's what this adds up to: In some of the reddest states in the union, where in most cases Republicans control both houses of the legislature, conservatives haven't bought the school choice doctrine DeVos has been selling. They're still largely reliant on traditional public schools.\n",
      "The two defecting Republican senators -- who will likely incur the enmity of a new president not known for forgiveness -- realize this. It's why, in her press statement last week, Murkowski of Alaska singled out school choice in explaining why she will be trying to vote DeVos down. \"I have serious concerns about a nominee to be Secretary of Education who has been so involved in one side of the equation - so immersed in the push for vouchers - that she may be unaware of what actually is successful in public schools, and what is broken or how to fix them,\" she said. Collins was no less focused. Speaking on the Senate floor this time last week, she said DeVos' \"concentration on charter schools and vouchers\" raised \"the question of whether or not she fully appreciates that the Secretary of Education's primary focus must be on helping states and communities, parents, teachers, school board members, and administrators strengthen our public schools.\" She concluded: \"I will not, I cannot vote to confirm her as our nation's next Secretary of Education.\" These sound like the words of a blue-state Democrat or a union boss, but they come from one senator whose state voted for Donald Trump over Hillary Clinton 53 to 38 percent, and another in whose state the GOP controls the entire legislature and the governorship. Though most rural, Republican moderates in the Senate will vote DeVos through today, their home states are divided on what she will do.\n",
      "In their opposition to DeVos, Republican moderates have unlikely company. If the election of Trump as president and the presence of Steve Bannon in Trump's inner circle has proved anything, it's that the far-right fringe of the party wields clout. In DeVos, they don't like what they see. Some members of this constituency -- which includes states rights activists, nationalists, and small-government conservatives (not to mention the outright racists and xenophobes) -- voted for a Trump administration in the hope it would bring an end to Common Core, their favorite education policy bete noire. But that isn't on DeVos' radar. Coupled with DeVos' pledge to keep implementing the requirements of the Every Student Succeeds Act -- the bipartisan successor to the Bush administration's No Child Left Behind Act that cleared Congress in 2015 -- conservative activists see the president's choice as an abject betrayal. \"Despite Trump's lambasting of Jeb Bush's education policies, the list of staffers looks more like the choices that would have been made under a Jeb Bush administration,\" wrote Erin Tuttle of Hoosiers Against Common Core last month, citing a Politico story pointing out the number of former Jeb staffers hired by the new administration. On Breitbart, writer Susan Berry has been driving home this argument too. DeVos won't put \"the needs of students and their parents' decision for their education first,\" she's declared.\n",
      "Let's just remember it's the third week of life under President Trump, with Republicans in control of the House and the Senate. In Betsy DeVos, the new president has succeeded in choosing an education secretary who unites in their disdain liberals, rural Republicans, and writers at Breitbart. That's quite an achievement.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "ptexts=[open('ps2data/p{}.txt'.format(i)).read() for i in range(30)]\n",
    "stexts=[open('ps2data/s{}.txt'.format(i)).read() for i in range(30)]\n",
    "ttexts=[open('ps2data/t{}.txt'.format(i)).read() for i in range(10)]\n",
    "print (ptexts[0]) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 217,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['the',\n",
       " 'conservative',\n",
       " 'case',\n",
       " 'against',\n",
       " 'betsy',\n",
       " 'devos',\n",
       " 'her',\n",
       " 'nomination',\n",
       " 'as',\n",
       " 'education',\n",
       " 'secretary',\n",
       " 'has',\n",
       " 'united',\n",
       " 'liberals',\n",
       " 'rural',\n",
       " 'republicans',\n",
       " 'and',\n",
       " 'breitbart',\n",
       " 'writers',\n",
       " 'in',\n",
       " 'disdain',\n",
       " 'feb',\n",
       " '7',\n",
       " '2017',\n",
       " '11',\n",
       " '43',\n",
       " 'am',\n",
       " 'of',\n",
       " 'all',\n",
       " 'of',\n",
       " 'donald',\n",
       " 'j',\n",
       " \"trump's\",\n",
       " 'controversial',\n",
       " 'cabinet',\n",
       " 'choices',\n",
       " 'betsy',\n",
       " 'devos',\n",
       " 'his',\n",
       " 'nominee',\n",
       " 'for',\n",
       " 'secretary',\n",
       " 'of',\n",
       " 'education',\n",
       " 'will',\n",
       " 'likely',\n",
       " 'come',\n",
       " 'closest',\n",
       " 'to',\n",
       " 'falling',\n",
       " 'short',\n",
       " 'of',\n",
       " 'senate',\n",
       " 'confirmation',\n",
       " 'but',\n",
       " 'after',\n",
       " 'a',\n",
       " 'bumpy',\n",
       " 'hearing',\n",
       " 'last',\n",
       " 'month',\n",
       " 'declarations',\n",
       " 'by',\n",
       " 'two',\n",
       " 'republicans',\n",
       " 'that',\n",
       " 'they',\n",
       " \"can't\",\n",
       " 'in',\n",
       " 'good',\n",
       " 'conscience',\n",
       " 'vote',\n",
       " 'her',\n",
       " 'through',\n",
       " 'and',\n",
       " 'a',\n",
       " 'probably',\n",
       " 'futile',\n",
       " 'democratic',\n",
       " 'talk',\n",
       " 'a',\n",
       " 'thon',\n",
       " 'that',\n",
       " 'kicked',\n",
       " 'off',\n",
       " 'monday',\n",
       " 'on',\n",
       " 'the',\n",
       " 'floor',\n",
       " 'of',\n",
       " 'the',\n",
       " 'senate',\n",
       " 'it',\n",
       " 'seems',\n",
       " 'devos',\n",
       " 'will',\n",
       " 'only',\n",
       " 'secure',\n",
       " 'her',\n",
       " 'spot',\n",
       " 'by',\n",
       " 'dint',\n",
       " 'of',\n",
       " 'the',\n",
       " 'intervention',\n",
       " 'of',\n",
       " 'vice',\n",
       " 'president',\n",
       " 'mike',\n",
       " 'pence',\n",
       " 'who',\n",
       " 'will',\n",
       " 'be',\n",
       " 'called',\n",
       " 'on',\n",
       " 'to',\n",
       " 'cast',\n",
       " 'a',\n",
       " 'tie',\n",
       " 'breaking',\n",
       " 'vote',\n",
       " 'update',\n",
       " 'feb',\n",
       " '7',\n",
       " '12',\n",
       " '32',\n",
       " 'p',\n",
       " 'm',\n",
       " 'and',\n",
       " \"that's\",\n",
       " 'exactly',\n",
       " 'what',\n",
       " 'he',\n",
       " 'did',\n",
       " 'allowing',\n",
       " 'the',\n",
       " 'senate',\n",
       " 'to',\n",
       " 'confirm',\n",
       " 'devos',\n",
       " '51',\n",
       " '50',\n",
       " 'what',\n",
       " 'distinguishes',\n",
       " 'the',\n",
       " 'resistance',\n",
       " 'to',\n",
       " 'devos',\n",
       " 'from',\n",
       " 'the',\n",
       " 'groundswell',\n",
       " 'of',\n",
       " 'opposition',\n",
       " 'to',\n",
       " 'the',\n",
       " \"administration's\",\n",
       " 'other',\n",
       " 'nominees',\n",
       " 'is',\n",
       " 'that',\n",
       " \"it's\",\n",
       " 'not',\n",
       " 'just',\n",
       " 'liberals',\n",
       " 'who',\n",
       " 'are',\n",
       " 'unhappy',\n",
       " 'rather',\n",
       " 'in',\n",
       " 'addition',\n",
       " 'to',\n",
       " 'the',\n",
       " 'expected',\n",
       " 'progressive',\n",
       " 'outrage',\n",
       " 'over',\n",
       " \"devos'\",\n",
       " 'history',\n",
       " 'of',\n",
       " 'advocating',\n",
       " 'for',\n",
       " 'school',\n",
       " 'vouchers',\n",
       " 'championing',\n",
       " 'charterization',\n",
       " 'and',\n",
       " 'at',\n",
       " 'her',\n",
       " 'hearing',\n",
       " 'defending',\n",
       " 'having',\n",
       " 'guns',\n",
       " 'in',\n",
       " 'schools',\n",
       " 'yes',\n",
       " 'the',\n",
       " 'thing',\n",
       " 'about',\n",
       " 'grizzly',\n",
       " 'bears',\n",
       " 'there',\n",
       " 'are',\n",
       " 'important',\n",
       " 'conservatives',\n",
       " 'resisting',\n",
       " 'too',\n",
       " 'on',\n",
       " 'both',\n",
       " 'the',\n",
       " 'now',\n",
       " 'powerful',\n",
       " 'breitbart',\n",
       " 'flank',\n",
       " 'of',\n",
       " 'the',\n",
       " 'movement',\n",
       " 'and',\n",
       " 'among',\n",
       " 'moderates',\n",
       " 'republicans',\n",
       " 'have',\n",
       " 'come',\n",
       " 'out',\n",
       " 'against',\n",
       " 'president',\n",
       " \"trump's\",\n",
       " 'choice',\n",
       " 'more',\n",
       " 'than',\n",
       " 'you',\n",
       " 'would',\n",
       " 'expect',\n",
       " 'given',\n",
       " 'the',\n",
       " '50',\n",
       " 'gop',\n",
       " 'senators',\n",
       " 'who',\n",
       " 'appear',\n",
       " 'likely',\n",
       " 'to',\n",
       " 'vote',\n",
       " 'for',\n",
       " 'her',\n",
       " 'all',\n",
       " 'of',\n",
       " 'this',\n",
       " 'says',\n",
       " 'something',\n",
       " 'about',\n",
       " 'the',\n",
       " 'republican',\n",
       " 'party',\n",
       " 'where',\n",
       " 'some',\n",
       " 'members',\n",
       " 'are',\n",
       " 'bucking',\n",
       " 'the',\n",
       " 'president',\n",
       " 'just',\n",
       " 'three',\n",
       " 'weeks',\n",
       " 'into',\n",
       " 'his',\n",
       " 'term',\n",
       " 'and',\n",
       " 'about',\n",
       " 'the',\n",
       " 'debates',\n",
       " 'over',\n",
       " 'reforming',\n",
       " 'education',\n",
       " 'that',\n",
       " 'will',\n",
       " 'take',\n",
       " 'place',\n",
       " 'over',\n",
       " 'the',\n",
       " 'next',\n",
       " 'four',\n",
       " 'years',\n",
       " 'in',\n",
       " '2017',\n",
       " \"there's\",\n",
       " 'no',\n",
       " 'conservative',\n",
       " 'unity',\n",
       " 'on',\n",
       " 'education',\n",
       " 'policy',\n",
       " 'to',\n",
       " 'understand',\n",
       " 'all',\n",
       " 'this',\n",
       " \"it's\",\n",
       " 'important',\n",
       " 'to',\n",
       " 'note',\n",
       " 'the',\n",
       " '1990s',\n",
       " 'charter',\n",
       " 'school',\n",
       " 'movement',\n",
       " 'that',\n",
       " 'seemed',\n",
       " 'to',\n",
       " 'sweep',\n",
       " 'the',\n",
       " 'country',\n",
       " \"didn't\",\n",
       " 'quite',\n",
       " 'reach',\n",
       " 'all',\n",
       " 'states',\n",
       " 'rather',\n",
       " 'a',\n",
       " 'handful',\n",
       " 'mostly',\n",
       " 'in',\n",
       " 'the',\n",
       " 'great',\n",
       " 'plains',\n",
       " 'and',\n",
       " 'appalachia',\n",
       " 'held',\n",
       " 'out',\n",
       " 'those',\n",
       " 'states',\n",
       " 'montana',\n",
       " 'north',\n",
       " 'and',\n",
       " 'south',\n",
       " 'dakota',\n",
       " 'nebraska',\n",
       " 'kentucky',\n",
       " 'west',\n",
       " 'virginia',\n",
       " 'and',\n",
       " 'vermont',\n",
       " 'have',\n",
       " 'one',\n",
       " 'thing',\n",
       " 'in',\n",
       " 'common',\n",
       " 'compared',\n",
       " 'with',\n",
       " 'the',\n",
       " 'rest',\n",
       " 'of',\n",
       " 'america',\n",
       " 'they',\n",
       " 'have',\n",
       " 'many',\n",
       " 'fewer',\n",
       " 'people',\n",
       " 'in',\n",
       " 'cities',\n",
       " 'that',\n",
       " 'feature',\n",
       " 'is',\n",
       " 'not',\n",
       " 'coincidentally',\n",
       " 'shared',\n",
       " 'by',\n",
       " 'maine',\n",
       " 'and',\n",
       " 'alaska',\n",
       " 'the',\n",
       " 'states',\n",
       " 'represented',\n",
       " 'by',\n",
       " 'susan',\n",
       " 'collins',\n",
       " 'and',\n",
       " 'lisa',\n",
       " 'murkowski',\n",
       " 'the',\n",
       " 'republican',\n",
       " 'senators',\n",
       " 'who',\n",
       " 'will',\n",
       " 'definitely',\n",
       " 'vote',\n",
       " 'against',\n",
       " 'devos',\n",
       " 'and',\n",
       " 'not',\n",
       " 'coincidentally',\n",
       " 'either',\n",
       " 'in',\n",
       " 'both',\n",
       " \"senators'\",\n",
       " 'states',\n",
       " 'the',\n",
       " 'charter',\n",
       " 'school',\n",
       " 'movement',\n",
       " 'was',\n",
       " 'slow',\n",
       " 'to',\n",
       " 'take',\n",
       " 'seed',\n",
       " 'in',\n",
       " 'maine',\n",
       " 'there',\n",
       " 'are',\n",
       " 'seven',\n",
       " 'charters',\n",
       " 'in',\n",
       " 'operation',\n",
       " 'and',\n",
       " 'in',\n",
       " 'alaska',\n",
       " '29',\n",
       " \"here's\",\n",
       " 'what',\n",
       " 'this',\n",
       " 'adds',\n",
       " 'up',\n",
       " 'to',\n",
       " 'in',\n",
       " 'some',\n",
       " 'of',\n",
       " 'the',\n",
       " 'reddest',\n",
       " 'states',\n",
       " 'in',\n",
       " 'the',\n",
       " 'union',\n",
       " 'where',\n",
       " 'in',\n",
       " 'most',\n",
       " 'cases',\n",
       " 'republicans',\n",
       " 'control',\n",
       " 'both',\n",
       " 'houses',\n",
       " 'of',\n",
       " 'the',\n",
       " 'legislature',\n",
       " 'conservatives',\n",
       " \"haven't\",\n",
       " 'bought',\n",
       " 'the',\n",
       " 'school',\n",
       " 'choice',\n",
       " 'doctrine',\n",
       " 'devos',\n",
       " 'has',\n",
       " 'been',\n",
       " 'selling',\n",
       " \"they're\",\n",
       " 'still',\n",
       " 'largely',\n",
       " 'reliant',\n",
       " 'on',\n",
       " 'traditional',\n",
       " 'public',\n",
       " 'schools',\n",
       " 'the',\n",
       " 'two',\n",
       " 'defecting',\n",
       " 'republican',\n",
       " 'senators',\n",
       " 'who',\n",
       " 'will',\n",
       " 'likely',\n",
       " 'incur',\n",
       " 'the',\n",
       " 'enmity',\n",
       " 'of',\n",
       " 'a',\n",
       " 'new',\n",
       " 'president',\n",
       " 'not',\n",
       " 'known',\n",
       " 'for',\n",
       " 'forgiveness',\n",
       " 'realize',\n",
       " 'this',\n",
       " \"it's\",\n",
       " 'why',\n",
       " 'in',\n",
       " 'her',\n",
       " 'press',\n",
       " 'statement',\n",
       " 'last',\n",
       " 'week',\n",
       " 'murkowski',\n",
       " 'of',\n",
       " 'alaska',\n",
       " 'singled',\n",
       " 'out',\n",
       " 'school',\n",
       " 'choice',\n",
       " 'in',\n",
       " 'explaining',\n",
       " 'why',\n",
       " 'she',\n",
       " 'will',\n",
       " 'be',\n",
       " 'trying',\n",
       " 'to',\n",
       " 'vote',\n",
       " 'devos',\n",
       " 'down',\n",
       " 'i',\n",
       " 'have',\n",
       " 'serious',\n",
       " 'concerns',\n",
       " 'about',\n",
       " 'a',\n",
       " 'nominee',\n",
       " 'to',\n",
       " 'be',\n",
       " 'secretary',\n",
       " 'of',\n",
       " 'education',\n",
       " 'who',\n",
       " 'has',\n",
       " 'been',\n",
       " 'so',\n",
       " 'involved',\n",
       " 'in',\n",
       " 'one',\n",
       " 'side',\n",
       " 'of',\n",
       " 'the',\n",
       " 'equation',\n",
       " 'so',\n",
       " 'immersed',\n",
       " 'in',\n",
       " 'the',\n",
       " 'push',\n",
       " 'for',\n",
       " 'vouchers',\n",
       " 'that',\n",
       " 'she',\n",
       " 'may',\n",
       " 'be',\n",
       " 'unaware',\n",
       " 'of',\n",
       " 'what',\n",
       " 'actually',\n",
       " 'is',\n",
       " 'successful',\n",
       " 'in',\n",
       " 'public',\n",
       " 'schools',\n",
       " 'and',\n",
       " 'what',\n",
       " 'is',\n",
       " 'broken',\n",
       " 'or',\n",
       " 'how',\n",
       " 'to',\n",
       " 'fix',\n",
       " 'them',\n",
       " 'she',\n",
       " 'said',\n",
       " 'collins',\n",
       " 'was',\n",
       " 'no',\n",
       " 'less',\n",
       " 'focused',\n",
       " 'speaking',\n",
       " 'on',\n",
       " 'the',\n",
       " 'senate',\n",
       " 'floor',\n",
       " 'this',\n",
       " 'time',\n",
       " 'last',\n",
       " 'week',\n",
       " 'she',\n",
       " 'said',\n",
       " \"devos'\",\n",
       " 'concentration',\n",
       " 'on',\n",
       " 'charter',\n",
       " 'schools',\n",
       " 'and',\n",
       " 'vouchers',\n",
       " 'raised',\n",
       " 'the',\n",
       " 'question',\n",
       " 'of',\n",
       " 'whether',\n",
       " 'or',\n",
       " 'not',\n",
       " 'she',\n",
       " 'fully',\n",
       " 'appreciates',\n",
       " 'that',\n",
       " 'the',\n",
       " 'secretary',\n",
       " 'of',\n",
       " \"education's\",\n",
       " 'primary',\n",
       " 'focus',\n",
       " 'must',\n",
       " 'be',\n",
       " 'on',\n",
       " 'helping',\n",
       " 'states',\n",
       " 'and',\n",
       " 'communities',\n",
       " 'parents',\n",
       " 'teachers',\n",
       " 'school',\n",
       " 'board',\n",
       " 'members',\n",
       " 'and',\n",
       " 'administrators',\n",
       " 'strengthen',\n",
       " 'our',\n",
       " 'public',\n",
       " 'schools',\n",
       " 'she',\n",
       " 'concluded',\n",
       " 'i',\n",
       " 'will',\n",
       " 'not',\n",
       " 'i',\n",
       " 'cannot',\n",
       " 'vote',\n",
       " 'to',\n",
       " 'confirm',\n",
       " 'her',\n",
       " 'as',\n",
       " 'our',\n",
       " \"nation's\",\n",
       " 'next',\n",
       " 'secretary',\n",
       " 'of',\n",
       " 'education',\n",
       " 'these',\n",
       " 'sound',\n",
       " 'like',\n",
       " 'the',\n",
       " 'words',\n",
       " 'of',\n",
       " 'a',\n",
       " 'blue',\n",
       " 'state',\n",
       " 'democrat',\n",
       " 'or',\n",
       " 'a',\n",
       " 'union',\n",
       " 'boss',\n",
       " 'but',\n",
       " 'they',\n",
       " 'come',\n",
       " 'from',\n",
       " 'one',\n",
       " 'senator',\n",
       " 'whose',\n",
       " 'state',\n",
       " 'voted',\n",
       " 'for',\n",
       " 'donald',\n",
       " 'trump',\n",
       " 'over',\n",
       " 'hillary',\n",
       " 'clinton',\n",
       " '53',\n",
       " 'to',\n",
       " '38',\n",
       " 'percent',\n",
       " 'and',\n",
       " 'another',\n",
       " 'in',\n",
       " 'whose',\n",
       " 'state',\n",
       " 'the',\n",
       " 'gop',\n",
       " 'controls',\n",
       " 'the',\n",
       " 'entire',\n",
       " 'legislature',\n",
       " 'and',\n",
       " 'the',\n",
       " 'governorship',\n",
       " 'though',\n",
       " 'most',\n",
       " 'rural',\n",
       " 'republican',\n",
       " 'moderates',\n",
       " 'in',\n",
       " 'the',\n",
       " 'senate',\n",
       " 'will',\n",
       " 'vote',\n",
       " 'devos',\n",
       " 'through',\n",
       " 'today',\n",
       " 'their',\n",
       " 'home',\n",
       " 'states',\n",
       " 'are',\n",
       " 'divided',\n",
       " 'on',\n",
       " 'what',\n",
       " 'she',\n",
       " 'will',\n",
       " 'do',\n",
       " 'in',\n",
       " 'their',\n",
       " 'opposition',\n",
       " 'to',\n",
       " 'devos',\n",
       " 'republican',\n",
       " 'moderates',\n",
       " 'have',\n",
       " 'unlikely',\n",
       " 'company',\n",
       " 'if',\n",
       " 'the',\n",
       " 'election',\n",
       " 'of',\n",
       " 'trump',\n",
       " 'as',\n",
       " 'president',\n",
       " 'and',\n",
       " 'the',\n",
       " 'presence',\n",
       " 'of',\n",
       " 'steve',\n",
       " 'bannon',\n",
       " 'in',\n",
       " \"trump's\",\n",
       " 'inner',\n",
       " 'circle',\n",
       " 'has',\n",
       " 'proved',\n",
       " 'anything',\n",
       " \"it's\",\n",
       " 'that',\n",
       " 'the',\n",
       " 'far',\n",
       " 'right',\n",
       " 'fringe',\n",
       " 'of',\n",
       " 'the',\n",
       " 'party',\n",
       " 'wields',\n",
       " 'clout',\n",
       " 'in',\n",
       " 'devos',\n",
       " 'they',\n",
       " \"don't\",\n",
       " 'like',\n",
       " 'what',\n",
       " 'they',\n",
       " 'see',\n",
       " 'some',\n",
       " 'members',\n",
       " 'of',\n",
       " 'this',\n",
       " 'constituency',\n",
       " 'which',\n",
       " 'includes',\n",
       " 'states',\n",
       " 'rights',\n",
       " 'activists',\n",
       " 'nationalists',\n",
       " 'and',\n",
       " 'small',\n",
       " 'government',\n",
       " 'conservatives',\n",
       " 'not',\n",
       " 'to',\n",
       " 'mention',\n",
       " 'the',\n",
       " 'outright',\n",
       " 'racists',\n",
       " 'and',\n",
       " 'xenophobes',\n",
       " 'voted',\n",
       " 'for',\n",
       " 'a',\n",
       " 'trump',\n",
       " 'administration',\n",
       " 'in',\n",
       " 'the',\n",
       " 'hope',\n",
       " 'it',\n",
       " 'would',\n",
       " 'bring',\n",
       " 'an',\n",
       " 'end',\n",
       " 'to',\n",
       " 'common',\n",
       " 'core',\n",
       " 'their',\n",
       " 'favorite',\n",
       " 'education',\n",
       " 'policy',\n",
       " 'bete',\n",
       " 'noire',\n",
       " 'but',\n",
       " 'that',\n",
       " \"isn't\",\n",
       " 'on',\n",
       " \"devos'\",\n",
       " 'radar',\n",
       " 'coupled',\n",
       " 'with',\n",
       " \"devos'\",\n",
       " 'pledge',\n",
       " 'to',\n",
       " 'keep',\n",
       " 'implementing',\n",
       " 'the',\n",
       " 'requirements',\n",
       " 'of',\n",
       " 'the',\n",
       " 'every',\n",
       " 'student',\n",
       " 'succeeds',\n",
       " 'act',\n",
       " 'the',\n",
       " 'bipartisan',\n",
       " 'successor',\n",
       " 'to',\n",
       " 'the',\n",
       " 'bush',\n",
       " \"administration's\",\n",
       " 'no',\n",
       " 'child',\n",
       " 'left',\n",
       " 'behind',\n",
       " 'act',\n",
       " 'that',\n",
       " 'cleared',\n",
       " 'congress',\n",
       " 'in',\n",
       " '2015',\n",
       " 'conservative',\n",
       " 'activists',\n",
       " 'see',\n",
       " 'the',\n",
       " \"president's\",\n",
       " 'choice',\n",
       " 'as',\n",
       " 'an',\n",
       " 'abject',\n",
       " 'betrayal',\n",
       " 'despite',\n",
       " \"trump's\",\n",
       " 'lambasting',\n",
       " 'of',\n",
       " 'jeb',\n",
       " \"bush's\",\n",
       " 'education',\n",
       " 'policies',\n",
       " 'the',\n",
       " 'list',\n",
       " 'of',\n",
       " 'staffers',\n",
       " 'looks',\n",
       " 'more',\n",
       " 'like',\n",
       " 'the',\n",
       " 'choices',\n",
       " 'that',\n",
       " 'would',\n",
       " 'have',\n",
       " 'been',\n",
       " 'made',\n",
       " 'under',\n",
       " 'a',\n",
       " 'jeb',\n",
       " 'bush',\n",
       " 'administration',\n",
       " 'wrote',\n",
       " 'erin',\n",
       " 'tuttle',\n",
       " 'of',\n",
       " 'hoosiers',\n",
       " 'against',\n",
       " 'common',\n",
       " 'core',\n",
       " 'last',\n",
       " 'month',\n",
       " 'citing',\n",
       " 'a',\n",
       " 'politico',\n",
       " 'story',\n",
       " 'pointing',\n",
       " 'out',\n",
       " 'the',\n",
       " 'number',\n",
       " 'of',\n",
       " 'former',\n",
       " 'jeb',\n",
       " 'staffers',\n",
       " 'hired',\n",
       " 'by',\n",
       " 'the',\n",
       " 'new',\n",
       " 'administration',\n",
       " 'on',\n",
       " 'breitbart',\n",
       " 'writer',\n",
       " 'susan',\n",
       " 'berry',\n",
       " 'has',\n",
       " 'been',\n",
       " 'driving',\n",
       " 'home',\n",
       " 'this',\n",
       " 'argument',\n",
       " 'too',\n",
       " 'devos',\n",
       " \"won't\",\n",
       " 'put',\n",
       " 'the',\n",
       " 'needs',\n",
       " 'of',\n",
       " 'students',\n",
       " 'and',\n",
       " 'their',\n",
       " \"parents'\",\n",
       " 'decision',\n",
       " 'for',\n",
       " 'their',\n",
       " 'education',\n",
       " 'first',\n",
       " \"she's\",\n",
       " 'declared',\n",
       " \"let's\",\n",
       " 'just',\n",
       " 'remember',\n",
       " \"it's\",\n",
       " 'the',\n",
       " 'third',\n",
       " 'week',\n",
       " 'of',\n",
       " 'life',\n",
       " 'under',\n",
       " 'president',\n",
       " 'trump',\n",
       " 'with',\n",
       " 'republicans',\n",
       " 'in',\n",
       " 'control',\n",
       " 'of',\n",
       " 'the',\n",
       " 'house',\n",
       " 'and',\n",
       " 'the',\n",
       " 'senate',\n",
       " 'in',\n",
       " 'betsy',\n",
       " 'devos',\n",
       " 'the',\n",
       " 'new',\n",
       " 'president',\n",
       " 'has',\n",
       " 'succeeded',\n",
       " 'in',\n",
       " 'choosing',\n",
       " 'an',\n",
       " 'education',\n",
       " 'secretary',\n",
       " 'who',\n",
       " 'unites',\n",
       " 'in',\n",
       " 'their',\n",
       " 'disdain',\n",
       " 'liberals',\n",
       " 'rural',\n",
       " 'republicans',\n",
       " 'and',\n",
       " 'writers',\n",
       " 'at',\n",
       " 'breitbart',\n",
       " \"that's\",\n",
       " 'quite',\n",
       " 'an',\n",
       " 'achievement']"
      ]
     },
     "execution_count": 217,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import re\n",
    "re.findall(\"[a-z0-9']+\",ptexts[0].lower())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 218,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Counter({'11': 1,\n",
       "         '12': 1,\n",
       "         '1990s': 1,\n",
       "         '2015': 1,\n",
       "         '2017': 1,\n",
       "         '29': 1,\n",
       "         '32': 1,\n",
       "         '38': 1,\n",
       "         '43': 1,\n",
       "         '50': 1,\n",
       "         '51': 1,\n",
       "         '53': 1,\n",
       "         '7': 1,\n",
       "         'a': 1,\n",
       "         'abject': 1,\n",
       "         'about': 1,\n",
       "         'achievement': 1,\n",
       "         'act': 1,\n",
       "         'activists': 1,\n",
       "         'actually': 1,\n",
       "         'addition': 1,\n",
       "         'adds': 1,\n",
       "         'administration': 1,\n",
       "         \"administration's\": 1,\n",
       "         'administrators': 1,\n",
       "         'advocating': 1,\n",
       "         'after': 1,\n",
       "         'against': 1,\n",
       "         'alaska': 1,\n",
       "         'all': 1,\n",
       "         'allowing': 1,\n",
       "         'am': 1,\n",
       "         'america': 1,\n",
       "         'among': 1,\n",
       "         'an': 1,\n",
       "         'and': 1,\n",
       "         'another': 1,\n",
       "         'anything': 1,\n",
       "         'appalachia': 1,\n",
       "         'appear': 1,\n",
       "         'appreciates': 1,\n",
       "         'are': 1,\n",
       "         'argument': 1,\n",
       "         'as': 1,\n",
       "         'at': 1,\n",
       "         'bannon': 1,\n",
       "         'be': 1,\n",
       "         'bears': 1,\n",
       "         'been': 1,\n",
       "         'behind': 1,\n",
       "         'berry': 1,\n",
       "         'bete': 1,\n",
       "         'betrayal': 1,\n",
       "         'betsy': 1,\n",
       "         'bipartisan': 1,\n",
       "         'blue': 1,\n",
       "         'board': 1,\n",
       "         'boss': 1,\n",
       "         'both': 1,\n",
       "         'bought': 1,\n",
       "         'breaking': 1,\n",
       "         'breitbart': 1,\n",
       "         'bring': 1,\n",
       "         'broken': 1,\n",
       "         'bucking': 1,\n",
       "         'bumpy': 1,\n",
       "         'bush': 1,\n",
       "         \"bush's\": 1,\n",
       "         'but': 1,\n",
       "         'by': 1,\n",
       "         'cabinet': 1,\n",
       "         'called': 1,\n",
       "         \"can't\": 1,\n",
       "         'cannot': 1,\n",
       "         'case': 1,\n",
       "         'cases': 1,\n",
       "         'cast': 1,\n",
       "         'championing': 1,\n",
       "         'charter': 1,\n",
       "         'charterization': 1,\n",
       "         'charters': 1,\n",
       "         'child': 1,\n",
       "         'choice': 1,\n",
       "         'choices': 1,\n",
       "         'choosing': 1,\n",
       "         'circle': 1,\n",
       "         'cities': 1,\n",
       "         'citing': 1,\n",
       "         'cleared': 1,\n",
       "         'clinton': 1,\n",
       "         'closest': 1,\n",
       "         'clout': 1,\n",
       "         'coincidentally': 1,\n",
       "         'collins': 1,\n",
       "         'come': 1,\n",
       "         'common': 1,\n",
       "         'communities': 1,\n",
       "         'company': 1,\n",
       "         'compared': 1,\n",
       "         'concentration': 1,\n",
       "         'concerns': 1,\n",
       "         'concluded': 1,\n",
       "         'confirm': 1,\n",
       "         'confirmation': 1,\n",
       "         'congress': 1,\n",
       "         'conscience': 1,\n",
       "         'conservative': 1,\n",
       "         'conservatives': 1,\n",
       "         'constituency': 1,\n",
       "         'control': 1,\n",
       "         'controls': 1,\n",
       "         'controversial': 1,\n",
       "         'core': 1,\n",
       "         'country': 1,\n",
       "         'coupled': 1,\n",
       "         'dakota': 1,\n",
       "         'debates': 1,\n",
       "         'decision': 1,\n",
       "         'declarations': 1,\n",
       "         'declared': 1,\n",
       "         'defecting': 1,\n",
       "         'defending': 1,\n",
       "         'definitely': 1,\n",
       "         'democrat': 1,\n",
       "         'democratic': 1,\n",
       "         'despite': 1,\n",
       "         'devos': 1,\n",
       "         \"devos'\": 1,\n",
       "         'did': 1,\n",
       "         \"didn't\": 1,\n",
       "         'dint': 1,\n",
       "         'disdain': 1,\n",
       "         'distinguishes': 1,\n",
       "         'divided': 1,\n",
       "         'do': 1,\n",
       "         'doctrine': 1,\n",
       "         \"don't\": 1,\n",
       "         'donald': 1,\n",
       "         'down': 1,\n",
       "         'driving': 1,\n",
       "         'education': 1,\n",
       "         \"education's\": 1,\n",
       "         'either': 1,\n",
       "         'election': 1,\n",
       "         'end': 1,\n",
       "         'enmity': 1,\n",
       "         'entire': 1,\n",
       "         'equation': 1,\n",
       "         'erin': 1,\n",
       "         'every': 1,\n",
       "         'exactly': 1,\n",
       "         'expect': 1,\n",
       "         'expected': 1,\n",
       "         'explaining': 1,\n",
       "         'falling': 1,\n",
       "         'far': 1,\n",
       "         'favorite': 1,\n",
       "         'feature': 1,\n",
       "         'feb': 1,\n",
       "         'fewer': 1,\n",
       "         'first': 1,\n",
       "         'fix': 1,\n",
       "         'flank': 1,\n",
       "         'floor': 1,\n",
       "         'focus': 1,\n",
       "         'focused': 1,\n",
       "         'for': 1,\n",
       "         'forgiveness': 1,\n",
       "         'former': 1,\n",
       "         'four': 1,\n",
       "         'fringe': 1,\n",
       "         'from': 1,\n",
       "         'fully': 1,\n",
       "         'futile': 1,\n",
       "         'given': 1,\n",
       "         'good': 1,\n",
       "         'gop': 1,\n",
       "         'government': 1,\n",
       "         'governorship': 1,\n",
       "         'great': 1,\n",
       "         'grizzly': 1,\n",
       "         'groundswell': 1,\n",
       "         'guns': 1,\n",
       "         'handful': 1,\n",
       "         'has': 1,\n",
       "         'have': 1,\n",
       "         \"haven't\": 1,\n",
       "         'having': 1,\n",
       "         'he': 1,\n",
       "         'hearing': 1,\n",
       "         'held': 1,\n",
       "         'helping': 1,\n",
       "         'her': 1,\n",
       "         \"here's\": 1,\n",
       "         'hillary': 1,\n",
       "         'hired': 1,\n",
       "         'his': 1,\n",
       "         'history': 1,\n",
       "         'home': 1,\n",
       "         'hoosiers': 1,\n",
       "         'hope': 1,\n",
       "         'house': 1,\n",
       "         'houses': 1,\n",
       "         'how': 1,\n",
       "         'i': 1,\n",
       "         'if': 1,\n",
       "         'immersed': 1,\n",
       "         'implementing': 1,\n",
       "         'important': 1,\n",
       "         'in': 1,\n",
       "         'includes': 1,\n",
       "         'incur': 1,\n",
       "         'inner': 1,\n",
       "         'intervention': 1,\n",
       "         'into': 1,\n",
       "         'involved': 1,\n",
       "         'is': 1,\n",
       "         \"isn't\": 1,\n",
       "         'it': 1,\n",
       "         \"it's\": 1,\n",
       "         'j': 1,\n",
       "         'jeb': 1,\n",
       "         'just': 1,\n",
       "         'keep': 1,\n",
       "         'kentucky': 1,\n",
       "         'kicked': 1,\n",
       "         'known': 1,\n",
       "         'lambasting': 1,\n",
       "         'largely': 1,\n",
       "         'last': 1,\n",
       "         'left': 1,\n",
       "         'legislature': 1,\n",
       "         'less': 1,\n",
       "         \"let's\": 1,\n",
       "         'liberals': 1,\n",
       "         'life': 1,\n",
       "         'like': 1,\n",
       "         'likely': 1,\n",
       "         'lisa': 1,\n",
       "         'list': 1,\n",
       "         'looks': 1,\n",
       "         'm': 1,\n",
       "         'made': 1,\n",
       "         'maine': 1,\n",
       "         'many': 1,\n",
       "         'may': 1,\n",
       "         'members': 1,\n",
       "         'mention': 1,\n",
       "         'mike': 1,\n",
       "         'moderates': 1,\n",
       "         'monday': 1,\n",
       "         'montana': 1,\n",
       "         'month': 1,\n",
       "         'more': 1,\n",
       "         'most': 1,\n",
       "         'mostly': 1,\n",
       "         'movement': 1,\n",
       "         'murkowski': 1,\n",
       "         'must': 1,\n",
       "         \"nation's\": 1,\n",
       "         'nationalists': 1,\n",
       "         'nebraska': 1,\n",
       "         'needs': 1,\n",
       "         'new': 1,\n",
       "         'next': 1,\n",
       "         'no': 1,\n",
       "         'noire': 1,\n",
       "         'nomination': 1,\n",
       "         'nominee': 1,\n",
       "         'nominees': 1,\n",
       "         'north': 1,\n",
       "         'not': 1,\n",
       "         'note': 1,\n",
       "         'now': 1,\n",
       "         'number': 1,\n",
       "         'of': 1,\n",
       "         'off': 1,\n",
       "         'on': 1,\n",
       "         'one': 1,\n",
       "         'only': 1,\n",
       "         'operation': 1,\n",
       "         'opposition': 1,\n",
       "         'or': 1,\n",
       "         'other': 1,\n",
       "         'our': 1,\n",
       "         'out': 1,\n",
       "         'outrage': 1,\n",
       "         'outright': 1,\n",
       "         'over': 1,\n",
       "         'p': 1,\n",
       "         'parents': 1,\n",
       "         \"parents'\": 1,\n",
       "         'party': 1,\n",
       "         'pence': 1,\n",
       "         'people': 1,\n",
       "         'percent': 1,\n",
       "         'place': 1,\n",
       "         'plains': 1,\n",
       "         'pledge': 1,\n",
       "         'pointing': 1,\n",
       "         'policies': 1,\n",
       "         'policy': 1,\n",
       "         'politico': 1,\n",
       "         'powerful': 1,\n",
       "         'presence': 1,\n",
       "         'president': 1,\n",
       "         \"president's\": 1,\n",
       "         'press': 1,\n",
       "         'primary': 1,\n",
       "         'probably': 1,\n",
       "         'progressive': 1,\n",
       "         'proved': 1,\n",
       "         'public': 1,\n",
       "         'push': 1,\n",
       "         'put': 1,\n",
       "         'question': 1,\n",
       "         'quite': 1,\n",
       "         'racists': 1,\n",
       "         'radar': 1,\n",
       "         'raised': 1,\n",
       "         'rather': 1,\n",
       "         'reach': 1,\n",
       "         'realize': 1,\n",
       "         'reddest': 1,\n",
       "         'reforming': 1,\n",
       "         'reliant': 1,\n",
       "         'remember': 1,\n",
       "         'represented': 1,\n",
       "         'republican': 1,\n",
       "         'republicans': 1,\n",
       "         'requirements': 1,\n",
       "         'resistance': 1,\n",
       "         'resisting': 1,\n",
       "         'rest': 1,\n",
       "         'right': 1,\n",
       "         'rights': 1,\n",
       "         'rural': 1,\n",
       "         'said': 1,\n",
       "         'says': 1,\n",
       "         'school': 1,\n",
       "         'schools': 1,\n",
       "         'secretary': 1,\n",
       "         'secure': 1,\n",
       "         'see': 1,\n",
       "         'seed': 1,\n",
       "         'seemed': 1,\n",
       "         'seems': 1,\n",
       "         'selling': 1,\n",
       "         'senate': 1,\n",
       "         'senator': 1,\n",
       "         'senators': 1,\n",
       "         \"senators'\": 1,\n",
       "         'serious': 1,\n",
       "         'seven': 1,\n",
       "         'shared': 1,\n",
       "         'she': 1,\n",
       "         \"she's\": 1,\n",
       "         'short': 1,\n",
       "         'side': 1,\n",
       "         'singled': 1,\n",
       "         'slow': 1,\n",
       "         'small': 1,\n",
       "         'so': 1,\n",
       "         'some': 1,\n",
       "         'something': 1,\n",
       "         'sound': 1,\n",
       "         'south': 1,\n",
       "         'speaking': 1,\n",
       "         'spot': 1,\n",
       "         'staffers': 1,\n",
       "         'state': 1,\n",
       "         'statement': 1,\n",
       "         'states': 1,\n",
       "         'steve': 1,\n",
       "         'still': 1,\n",
       "         'story': 1,\n",
       "         'strengthen': 1,\n",
       "         'student': 1,\n",
       "         'students': 1,\n",
       "         'succeeded': 1,\n",
       "         'succeeds': 1,\n",
       "         'successful': 1,\n",
       "         'successor': 1,\n",
       "         'susan': 1,\n",
       "         'sweep': 1,\n",
       "         'take': 1,\n",
       "         'talk': 1,\n",
       "         'teachers': 1,\n",
       "         'term': 1,\n",
       "         'than': 1,\n",
       "         'that': 1,\n",
       "         \"that's\": 1,\n",
       "         'the': 1,\n",
       "         'their': 1,\n",
       "         'them': 1,\n",
       "         'there': 1,\n",
       "         \"there's\": 1,\n",
       "         'these': 1,\n",
       "         'they': 1,\n",
       "         \"they're\": 1,\n",
       "         'thing': 1,\n",
       "         'third': 1,\n",
       "         'this': 1,\n",
       "         'thon': 1,\n",
       "         'those': 1,\n",
       "         'though': 1,\n",
       "         'three': 1,\n",
       "         'through': 1,\n",
       "         'tie': 1,\n",
       "         'time': 1,\n",
       "         'to': 1,\n",
       "         'today': 1,\n",
       "         'too': 1,\n",
       "         'traditional': 1,\n",
       "         'trump': 1,\n",
       "         \"trump's\": 1,\n",
       "         'trying': 1,\n",
       "         'tuttle': 1,\n",
       "         'two': 1,\n",
       "         'unaware': 1,\n",
       "         'under': 1,\n",
       "         'understand': 1,\n",
       "         'unhappy': 1,\n",
       "         'union': 1,\n",
       "         'united': 1,\n",
       "         'unites': 1,\n",
       "         'unity': 1,\n",
       "         'unlikely': 1,\n",
       "         'up': 1,\n",
       "         'update': 1,\n",
       "         'vermont': 1,\n",
       "         'vice': 1,\n",
       "         'virginia': 1,\n",
       "         'vote': 1,\n",
       "         'voted': 1,\n",
       "         'vouchers': 1,\n",
       "         'was': 1,\n",
       "         'week': 1,\n",
       "         'weeks': 1,\n",
       "         'west': 1,\n",
       "         'what': 1,\n",
       "         'where': 1,\n",
       "         'whether': 1,\n",
       "         'which': 1,\n",
       "         'who': 1,\n",
       "         'whose': 1,\n",
       "         'why': 1,\n",
       "         'wields': 1,\n",
       "         'will': 1,\n",
       "         'with': 1,\n",
       "         \"won't\": 1,\n",
       "         'words': 1,\n",
       "         'would': 1,\n",
       "         'writer': 1,\n",
       "         'writers': 1,\n",
       "         'wrote': 1,\n",
       "         'xenophobes': 1,\n",
       "         'years': 1,\n",
       "         'yes': 1,\n",
       "         'you': 1})"
      ]
     },
     "execution_count": 218,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from collections import Counter\n",
    "Counter(set(re.findall(\"[a-z0-9']+\",ptexts[0].lower())))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 219,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "n_p = np.sum([Counter(set(re.findall(\"[a-z0-9']+\",txt.lower()))) for txt in ptexts])\n",
    "n_s = np.sum([Counter(set(re.findall(\"[a-z0-9']+\",txt.lower()))) for txt in stexts])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 220,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([('would', 30),\n",
       "  ('and', 30),\n",
       "  ('is', 30),\n",
       "  ('in', 30),\n",
       "  ('the', 30),\n",
       "  ('for', 30),\n",
       "  ('that', 30),\n",
       "  ('of', 30),\n",
       "  ('with', 30),\n",
       "  ('to', 30)],\n",
       " [('for', 30),\n",
       "  ('with', 30),\n",
       "  ('as', 30),\n",
       "  ('at', 30),\n",
       "  ('to', 30),\n",
       "  ('be', 30),\n",
       "  ('the', 30),\n",
       "  ('was', 30),\n",
       "  ('that', 30),\n",
       "  ('a', 30)])"
      ]
     },
     "execution_count": 220,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "n_p.most_common(10),n_s.most_common(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 221,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[('how', 17),\n",
       " ('law', 17),\n",
       " ('may', 17),\n",
       " ('get', 17),\n",
       " ('s', 17),\n",
       " ('since', 17),\n",
       " ('last', 17),\n",
       " ('its', 17),\n",
       " ('political', 17)]"
      ]
     },
     "execution_count": 221,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "n_p.most_common()[92:101]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 222,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "def bayes_classifier(txt):\n",
    "    p_train=30\n",
    "    s_train = 30\n",
    "    probp = 0\n",
    "    probs = 0\n",
    "    word_counts=Counter(re.findall(\"[a-z0-9']+\",txt.lower()))\n",
    "    keywords=[w for w,c in word_counts.most_common(p_train)]\n",
    "    for word in keywords:\n",
    "        if word not in n_p: \n",
    "            n_p[word]=.1\n",
    "        probp = probp + n_p[word]/p_train \n",
    "        if word not in n_s: \n",
    "            n_s[word]=.1\n",
    "        probs = probs + n_s[word]/s_train \n",
    "    prob = (probp)/((probp)+(probs))\n",
    "    if prob >= .5:\n",
    "        return 'politics',prob\n",
    "    else:\n",
    "        return 'sports',prob"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 223,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "('t0.txt:', ('sports', 0.4231163505894413))\n",
      "('t1.txt:', ('sports', 0.49970255800118973))\n",
      "('t2.txt:', ('sports', 0))\n",
      "('t3.txt:', ('politics', 0.5001190192811236))\n",
      "('t4.txt:', ('sports', 0.4614399180117858))\n",
      "('t5.txt:', ('sports', 0.4640180801712858))\n",
      "('t6.txt:', ('sports', 0.4447322970639033))\n",
      "('t7.txt:', ('sports', 0.4397815081268318))\n",
      "('t8.txt:', ('sports', 0.4813626265119723))\n",
      "('t9.txt:', ('sports', 0.45169263836646967))\n"
     ]
    }
   ],
   "source": [
    "for i in range(10):\n",
    "    print ('t{}.txt:'.format(i),bayes_classifier(ttexts[i]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#2. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 224,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "thewords=Counter()\n",
    "for txt in ptexts+stexts:\n",
    "    thewords += Counter(txt.lower().split())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 225,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "i = thewords.most_common(500)\n",
    "words = [x[0] for x in i]\n",
    "numbers = [x[1] for x in i]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 226,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 227,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\nBjt2vEzEbmAGWVAWx62r9aC3sv8sEegZIul9bO/zq+0/hp7ZJdUCvFrAV6YMFm/GET036Byotz5c\n+3sf+w4mTJjIEUf4DcTGlzEX0JLOBJaTTaf4XkRcW+WYEQ3o3qqPW1d62MXQfJEsIIuhWxkigf17\n27174NX2787P7yvAqbK9i/1vxhlob3249vc+ttobyF6KF1pr+2Ywkm88w/laI10Xv4kOhzEV0JIm\nAM8AnwR2AOuA8yPiN72OG9WA7m3/Hvbr9PzD3kPW651CTzhVhkhgcD3on5MFdV/DKX0F/JPsfzPO\nQHvrw7W/97G930CKAb6D7NNKrd4MRvKNZyj7U2t3f2+itXgz2EO2oNl4eRPMhh0jfj6kgG442BMP\n0lxgc0RsA5C0ClgI/OaAZ42y+fPn0dFxb9V9PRcdK7M49pD95zuUrFmTCr9f6WP7N2TjzTuA48jm\nbEPP/O3uKmWV7UayIY0JZG8Uld/0sT3c+3sf28H+byCHkn0ieSov39OrrLhd7ZyDPXao+2v5XKm1\nu/gmOovheTPYRNb5SOUNdzjfBI8CphCxjJ61gQ7OSN+o0gRsLzzuyMvGrPnz59HV9XMiHiXiV0T8\nmmefvYVPfeq9NDQ8C2wBKr+7gM359s7C9rPA78j+k6wnC+03eHvAv1Fl+0X2D/HK7762h3t/72Mb\n2T/Yi9uqUlbcrlZ2sMcOdX8tnyu1dneQvWFUpqAe2sf2UPbvG8D5tXqtWuwfynNNJ5so0MhQjXQP\nelxobp7FmjW3DOqctrY22tra3ppdUi7vZNeuHfQ/iwOyqX2D6a0P5/7ex+7Ot6t9CogqZcXtA31y\nGOyxQ91fy+dKrd29P4XRx/ZQ9k8cwPm1eq3h+CQ4mP1Qi3CGkR+DPg1oi4gz88eLgeh9oVBSOgPQ\nZmZDMJYuEh5CdhXik8DzwGPAf4mITSNWCTOzMWJEhzgi4k1JlwKr6Zlm53A2M6siyRtVzMwsseVG\nJZ0p6TeSnpF01WjXp5YkfU9Sl6QNhbKpklZLelrS/ZKOLOxbImmzpE2SFoxOrYdG0kxJD0r6taQn\nJV2el9dtuyVNlPSopCfyNrfm5XXb5gpJEyQ9Lumu/PF4aPNWSf8v//t+LC+rXbsjIokfsjeLfyOb\niPkOsvlmHxjtetWwff8ROBnYUCi7FvjbfPsq4Jp8ew7ZSksNZBOj/438085Y+iGbb3Ryvj2Z7PrD\nB8ZBuw/Pfx8CPEI2/7+u25y35Urgh8Bd+ePx0OZngam9ymrW7pR60G/dxBIRe4HKTSx1ISJ+STbZ\nuWghsDLfXgmcm2+fA6yKiH0RsZVswvTckahnLUXEzohYn2/vJrtbYSb13+7X8s2JZP8Zgzpvs6SZ\nZGvvFueX1nWbc5X5iUU1a3dKAV13N7EMwNER0QVZmAFH5+W9/yw6GeN/FpKOI/sE8QgwrZ7bnX/U\nf4LsbqQ1EbGOOm8z2bq7XyV7M6qo9zZD1t41ktZJ+lJeVrN2+0aVtNTlFVtJk4EfA1dExO4q89zr\nqt0R0Q18RNIRwL9I+iBvb2PdtFnS2UBXRKyXVDrAoXXT5oJ5EfG8pPcAqyU9TQ3/rlPqQXcCxxYe\nz8zL6lmXpGkAkqYDL+TlnWSrMFWM2T8LSQ1k4fyDiLgzL677dgNExCtAGTiT+m7zPOAcSc8C/xv4\nhKQfADvruM0ARMTz+e/fAj8hG7Ko2d91SgG9Djhe0ixJhwLnA3eNcp1qTflPxV3Aonz7C8CdhfLz\nJR0qqRk4nuymnrHo+8DGiLixUFa37Zb07spVe0mHAZ8mG3uv2zZHxNURcWxEvI/s/+2DEfHnwN3U\naZsBJB2efzpEUiOwgGx5ydr9XY/2VdBeVz/PJLvSvxlYPNr1qXHbbidbru51sgWj/yswFXggb/Nq\n4KjC8UvIrvJuAhaMdv0Pss3zyBYMWU929frx/O/4nfXabuDDeTvXAxuAr+XlddvmXu0/nZ5ZHHXd\nZrL1fiv/tp+sZFYt2+0bVczMEpXSEIeZmRU4oM3MEuWANjNLlAPazCxRDmgzs0Q5oM3MEuWANjNL\nlAPazCxR/x9+LirtSPIOUAAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10d70cf50>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "m=4000.\n",
    "plt.figure(figsize=(5.5,5))\n",
    "r=1+np.arange(500)\n",
    "plt.plot(r,numbers,'o');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 228,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10d70c090>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "m=4000.\n",
    "top10 = words[1:10]\n",
    "\n",
    "plt.figure(figsize=(5.5,5))\n",
    "r=1+np.arange(500)\n",
    "plt.loglog(r,numbers,'o')\n",
    "plt.xlim(.8,1e3)\n",
    "plt.plot(r,numbers,'-') #\"fit\" to data\n",
    "for x,y,w in zip(r,numbers,top10):\n",
    "    plt.text(x,y,w,ha='center')\n",
    "plt.legend(['data','fit']);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#3."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 229,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "18\n",
      "15\n",
      "18\n"
     ]
    }
   ],
   "source": [
    "tottexts = ptexts+stexts\n",
    "\n",
    "numdoc= np.sum([Counter(set(re.findall(\"[a-z0-9']+\",txt.lower()))) for txt in tottexts])\n",
    "options = [\"only\",\"while\",\"though\"]\n",
    "\n",
    "count12 = 0\n",
    "count13 = 0\n",
    "count23 = 0\n",
    "for txt in tottexts:\n",
    "   \n",
    "    if (\"only\" in re.findall(\"[a-z0-9']+\",txt.lower())) & (\"while\" in re.findall(\"[a-z0-9']+\",txt.lower())):\n",
    "        count12+= 1\n",
    "    if (\"only\" in re.findall(\"[a-z0-9']+\",txt.lower())) & (\"though\" in re.findall(\"[a-z0-9']+\",txt.lower())):\n",
    "        count13+= 1\n",
    "    if (\"while\" in re.findall(\"[a-z0-9']+\",txt.lower())) & (\"though\" in re.findall(\"[a-z0-9']+\",txt.lower())):\n",
    "        count23+= 1\n",
    "\n",
    "print count12\n",
    "print count13\n",
    "print count23"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 230,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "#My answer to 3a is 'only' and 'though.'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 231,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "fact\n",
      "yet\n"
     ]
    }
   ],
   "source": [
    "onefourth = []\n",
    "onethird = []\n",
    "for i in numdoc:\n",
    "    if numdoc[i] == 15:\n",
    "        onefourth.append(i)\n",
    "    if numdoc[i] == 20:\n",
    "        onethird.append(i)\n",
    "\n",
    "for n in onefourth:\n",
    "    for m in onethird:\n",
    "        count = 0\n",
    "        for txt in tottexts:\n",
    "            if (n in re.findall(\"[a-z0-9']+\",txt.lower())) & (m in re.findall(\"[a-z0-9']+\",txt.lower())):\n",
    "                count+=1\n",
    "        if count == 0:\n",
    "            print m\n",
    "            print n\n",
    "            \n",
    "            "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 232,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "#The answer to 3b is 'fact' and 'yet'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 233,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "only\n",
      "young\n",
      "though\n",
      "percent\n"
     ]
    }
   ],
   "source": [
    "onefourth = []\n",
    "onehalf = []\n",
    "for i in numdoc:\n",
    "    if numdoc[i] == 15:\n",
    "        onefourth.append(i)\n",
    "    if numdoc[i] == 30:\n",
    "        onehalf.append(i)\n",
    "\n",
    "for n in onefourth:\n",
    "    for m in onehalf:\n",
    "        count = 0\n",
    "        for txt in tottexts:\n",
    "            if (n in re.findall(\"[a-z0-9']+\",txt.lower())) & (m in re.findall(\"[a-z0-9']+\",txt.lower())):\n",
    "                count+=1\n",
    "        if count == 12:\n",
    "            print m\n",
    "            print n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 234,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "#The answer to 3c is \"only' and 'young.' They have a 20% positive correlation. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 242,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['been', 'you']\n",
      "['there', 'do']\n",
      "['been', 'i']\n",
      "['there', 'i']\n",
      "['been', 'then']\n",
      "['there', 'then']\n",
      "['you', 'been']\n",
      "['i', 'been']\n",
      "['then', 'been']\n",
      "['do', 'there']\n",
      "['i', 'there']\n",
      "['then', 'there']\n"
     ]
    }
   ],
   "source": [
    "#3d: they would co-occur in 9/16ths of the documents, which is 33.75 documents\n",
    "\n",
    "threefourth1 = []\n",
    "threefourth2 = []\n",
    "\n",
    "for i in numdoc:\n",
    "    if numdoc[i] == 45:\n",
    "        threefourth1.append(i)\n",
    "    if numdoc[i] == 45:\n",
    "        threefourth2.append(i)\n",
    "\n",
    "for n in threefourth1:\n",
    "    for m in threefourth2:\n",
    "        count = 0\n",
    "        for txt in tottexts:\n",
    "            if (n in re.findall(\"[a-z0-9']+\",txt.lower())) & (m in re.findall(\"[a-z0-9']+\",txt.lower())):\n",
    "                count+=1\n",
    "        \n",
    "        if count == 33:\n",
    "            print [m,n]\n",
    "            \n",
    "        if count == 34:\n",
    "            print [m,n]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#4c graph is below "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 251,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n/vrrvs8++1Qp37t3b7/xxhtrrTMrK6vy+cyZM/2II47wyy67zHfffXfv16+fP/vsszW+t0+fPn7D\nDTf44MGDvXPnzj527Fj/7rvv4pZ99913/eCDD/bddtvN99prL7/00ksr923bts3bt2/vS5Ys2el9\nU6dO9TZt2nh2drZ37NjR7777bi8vL/fp06d7bm6ud+/e3SdOnOjffPONu7svXrzYzcxnzJjhvXv3\n9uHDh+9UZ2Fhoffq1cuvv/5632uvvfynP/2pr1+/3k844QTfc889vUuXLn7CCSf4smXLKt+Tn5/v\nU6ZM8cMPP9w7duzoxx57rK9du7Zy/7333uu5ubnetWtXnz59uvfp08dffvlld3cvLy/3a6+91vPy\n8rxr165+xhln+Pr16+N+ThWx3Xjjjd6tWzfPycnxe+65p8a/g3j/fmO2J/Z9m+gbmtMD8DPOcJ8x\no8bPSqRR4v1nGz++IOZL3iu/7MePL6h3vcmoozoz85EjR3pJSYkvXbrUBwwY4DPC/xy33367n3DC\nCZVl582b51lZWb64jl9a1ZNFmzZtfMaMGV5eXu5/+ctfPCcnp8b39unTxw899FD/+uuvff369b7f\nfvv5HXfcEbfssGHD/IEHHnB399LSUv/3v/9dZf/gwYP9qaeeivvegoICP+ussypfz5gxw/fZZx9f\nvHixl5aW+qmnnlq5vyJZTJw40Tdt2uRbtmzZqb7CwkJv3bq1X3311b5161bfsmWLr1271h977DHf\nsmWLb9y40U8//XQ/+eSTK9+Tn5/v/fv39wULFviWLVs8Pz/fr776and3//TTT33XXXf1t99+28vK\nyvyyyy7zNm3aVCaLm266yYcNG+bFxcW+detWP++883zcuHFxz7UitoKCAt+2bZv/85//9Pbt23tJ\nSUnc8slMFmnfDDVqFLz8ctRRSEuyfHk50KHa1g7MmlWOGfV6zJoVv47Gjuq76qqr6NSpE7169eLi\niy/moYeC28GUlJTQsWPHynJr164FoEePHgnVn5ubyznnnIOZMXHiRL7++mtWrVpVY/mLLrqI7t27\n07lzZ0488UQ+/PDDuOXatGnDggULWLt2Le3bt2fo0KFV9nfs2JGSkvrdA+3BBx/kkksuITc3l/bt\n23Pttdcye/ZsysuDz9bMmDZtGu3atavSfxOrVatWTJs2jezsbNq2bUuXLl045ZRTaNu2LR06dODq\nq6/m9ddfr/Kes88+m7y8PNq2bcvpp59eea6PPvooJ510EsOGDaN169b87ne/q/K+O+64gz/84Q/0\n6NGD7OxsrrnmGh555JHKeON9VlOmTKFVq1Ycd9xx7LrrrnzxxRf1+mwaI+2TxVFHBcnCNW9KmkjP\nnllAabWtpYwfn1XlOqG2x/jx8eto7Ki+Xr16VT7Pzc2luLgYgN13350NGzZU7ttjjz0AWLFiRUL1\n77XXXpXP27Vrh7uzcePGGst379698nn79u1rLDtjxgy++OILvve973HooYfyzDPPVNm/YcMGOnfu\nXK8Yi4uLyc3d0YeZm5vLtm3bWLlyZeW22M8pnj333JPs7OzK15s3b2by5Mn06dOHzp07M3z4cEpK\nSipaOICqn03suRYXF7P33ntX7mvXrl3l5w9Bn8spp5xCly5d6NKlCwMHDiQ7O7tKvLH22GOPKqPU\navtckyntk0XfvtC+PXz6adSRSEsxffok8vKmsuPLPvERecmoI56lS5dWPl+yZAk5OTkADB48mPnz\n51fu23fffdl777159NFHG3W8ZMnLy+PBBx9k9erVXHHFFfzkJz9h8+bgVjbbt29nwYIFHHDAAfWq\nKycnp8p6XkVFRWRnZ1dJXHV1hlfff+ONN/Lll18yZ84cSkpKKq8qvB6/Unv06MGyZcsqX2/evLny\nyg6gd+/ePPvss6xbt45169axfv16SktLE77qS7W0TxagpihpWn375vLiixcwfvwNjBgxlfHjEx+R\nl4w64vm///s/SkpKWLp0KTfffDNjx44FYOjQoZSUlFS5krjxxhuZPn069957Lxs2bMDdefPNN5k8\neXKjYmiIWbNmsWbNGgA6deqEmVX+en733Xfp27dvlV/ntRk3bhx//vOfWbx4MRs3buQ3v/kNY8eO\nrayvPl/w1W3YsIF27dqx2267sW7dOgoKCur93p/85Cc89dRTvPPOO5SVle303smTJ/PrX/+aJUuW\nALB69WqefHKnm4dGLiNWnR01Ch58EC66KOpIpKXo2zeXBx6YGnkd1Y0ZM4aDDjqIb7/9lrPPPptz\nzjkHgOzsbCZNmsT999/PFVdcAcBpp51Gx44d+f3vf88FF1xAu3btGDRoEJdffnm9j1fbL/Ta9i1d\nupRBgwbx2Wef0atXL5577jkuueQSNm/eTG5uLg8//HBlf8KsWbM477zz6h3TOeecw4oVKzjyyCP5\n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\ntKFGE0F7wV4AAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10d76f790>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "x = np.arange(12)\n",
    "y = []\n",
    "for i in x:\n",
    "    val = .25**i/(.25**i+.5)\n",
    "    y.append(val)\n",
    "plt.plot(x,y,'o-');\n",
    "\n",
    "plt.title('probability of n healthy sons')\n",
    "plt.xlabel('healthy sons')\n",
    "plt.ylabel('$p(C\\,|\\, n.h.s. )$')\n",
    "plt.legend([' p(C|n h.s) for range n']);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [Root]",
   "language": "python",
   "name": "Python [Root]"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
